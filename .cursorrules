## ブランチ運用とPR
- 新しい作業は必ずブランチを作成して実施
  - ブランチ名は作業内容を表す名前をつける
  - 例: `feature/add-user-auth`, `fix/login-error`
- 作業単位でPRを作成
  - `gh pr create`コマンドを使用
  - PRのタイトルは変更内容を簡潔に表現
  - PRの説明は以下の手順で作成
    1. `.work`ディレクトリを作成（存在しない場合）
    2. 一時的なマークダウンファイルを作成（例: `.work/pr-draft.md`）
    3. `.github/pull_request_template.md`の内容をベースに、PR固有の内容を記載
    4. `gh pr create --body-file`で一時ファイルを使用してPRを作成
    5. PR作成後は一時ファイルを削除
  - PRの説明には以下を含める
    - 概要: PRの目的、背景、変更点を簡潔に記載
    - 変更内容: 具体的な変更内容をリストアップ
    - 確認したこと: 動作確認やテストの内容を記載
    - 補足: レビュアーへの注意点や補足事項を記載
  - PRをマージ可能な状態にする
    1. mainブランチの最新変更を取り込む
       ```bash
       git fetch origin main
       git switch main
       git pull origin main
       git switch -
       git rebase main
       ```
    2. コンフリクトが発生した場合は解消
    3. 変更をプッシュ（必要に応じて`--force-with-lease`を使用）
    4. CIが成功することを確認
    5. レビュー依頼前に以下を確認
       - コミットが整理されているか
       - 不要なファイルが含まれていないか
       - テスト、リント、型チェックが通過しているか
       - コードの品質が確保されているか
- PRは小さく保つ
  - 1つのPRで1つの機能や修正を扱う
  - レビューしやすい規模を維持
- PRのレビュー完了後にマージ
  - すべてのCIチェックが通過していることを確認
  - レビューコメントに対応済みであることを確認
  - コンフリクトが解消されていることを確認 