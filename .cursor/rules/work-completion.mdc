---
description: 作業完了に関するルールを定義します
globs: ["**/*"]
---

# 作業完了ルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. 作業完了の定義の明確化
   - 完了条件の標準化
   - 品質基準の統一
   - 完了プロセスの効率化

2. 品質の確保
   - レビュー準備の充実
   - マージ基準の明確化
   - 完了確認の徹底

## 2. レビュー準備完了の定義

1. コードの品質確認
   - 全てのテストが通過
   ```bash
   make test
   ```
   - リンター警告が解消済み
   ```bash
   make lint
   make type-check
   ```
   - コードの可読性が確保されている

2. 振り返りの完了
   - 実装完了時の振り返りが実施済み
   - 振り返り内容が十分な量である
   ```bash
   make check-retrospective
   ```

3. ドキュメントの更新
   - 必要なドキュメントが更新済み
   - APIドキュメントが更新済み（必要な場合）
   - 変更による影響範囲が文書化されている

4. ブランチの状態
   - mainブランチと同期済み
   - コンフリクトが解消済み

## 3. マージ承認の条件

1. レビュー承認
   - 必要数のレビュー承認を得ている
   - 全ての指摘事項が解決済み

2. CI/テストの完了
   - 全てのテストが通過
   - リンター警告が解消済み

3. ブランチの最終確認
   - mainブランチと同期済み
   - コンフリクトが解消済み

## 4. 作業完了プロセス

1. マージ後の確認
   - PRが正常にマージされたことを確認
   ```bash
   gh pr view <PR番号>  # PRの状態を確認
   ```
   - デプロイが正常に完了（必要な場合）

2. クリーンアップ
   - 一時ファイルの削除
   ```bash
   make pr-clean  # 一時ファイルを削除
   ```
   - `.work`ディレクトリが空であることを確認
   ```bash
   ls -la .work/  # ディレクトリが空であることを確認
   ```

3. 課題管理
   - 関連issueが全てクローズされているか確認
   - 派生した課題が適切に管理されているか確認

4. 作業完了の実行
   ```bash
   make finish-work PR="<PRタイトル>"
   ```

## 5. 完了後の確認

1. 振り返りの反映
   - 実装の振り返りで特定した改善点の反映状況
   - 次回の開発に向けた教訓の文書化

2. 知見の共有
   - チーム内での知見の共有
   - ベストプラクティスの更新

## 6. 関連ルール

* [開発サイクルルール](mdc:development-cycle.mdc): 開発サイクルの全体像
* [振り返りルール](mdc:retrospective.mdc): 振り返りと改善活動の進め方
* [品質確認ルール](mdc:quality-check.mdc): 品質確認の基準と手順
* [PR作成ルール](mdc:pr-creation.mdc): PRの作成手順 