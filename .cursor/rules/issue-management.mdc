---
description: 課題管理に関するルールを定義します
globs: [".github/ISSUE_TEMPLATE/*", "**/*.md"]
---

# 課題管理ルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. 課題管理の標準化
   - 課題の明確な定義
   - 優先順位の適切な設定
   - 進捗の可視化

2. 品質の向上
   - 要件の明確化
   - 影響範囲の把握
   - リスクの早期発見

3. チーム協働の促進
   - 情報共有の効率化
   - 依存関係の明確化
   - フィードバックの促進

## 2. 課題作成のタイミング

1. 新機能開発の開始時
   - 機能要件の定義時
   - 技術検証の開始時
   - 設計変更の検討時

2. バグ発見時
   - 本番環境での不具合発見時
   - テスト時の問題発見時
   - セキュリティ問題の検出時

3. 改善提案時
   - パフォーマンス改善の提案時
   - UX改善の提案時
   - 技術的負債の解消提案時

4. PRレビュー時の派生課題
   - リファクタリングの必要性検出時
   - 追加機能の提案時
   - バグ修正の必要性発見時

## 3. 課題の記載内容

1. 目的と背景
   - 課題の目的
   - 現状の問題点
   - 解決による効果

2. 実装方針
   - 具体的な実装案
   - 技術的な検討事項
   - 代替案の検討

3. 受け入れ基準
   - 機能要件
   - 非機能要件
   - テスト基準

4. 影響範囲
   - 影響を受けるコンポーネント
   - 変更が必要な関連機能
   - 考慮すべき副作用

## 4. 課題のラベル付け

1. 種別（Type）
   - feature: 新機能開発
   - bug: バグ修正
   - improvement: 改善提案
   - documentation: ドキュメント更新
   - refactor: リファクタリング
   - test: テストの追加・修正

2. 優先度（Priority）
   - high: 緊急対応が必要
   - medium: 通常の優先度
   - low: 余裕があれば対応

3. ステータス（Status）
   - ready: 着手可能
   - blocked: 他の作業待ち
   - in-progress: 作業中
   - in-review: レビュー中
   - done: 完了

## 5. 課題の管理

1. 進捗管理
   - 定期的な状態更新
   - ブロッカーの報告
   - 期限の設定と管理

2. 関連課題の管理
   - 依存関係の明示
   - 派生課題の管理
   - 重複課題の統合

3. 完了条件
   - 受け入れ基準の達成
   - レビューの完了
   - 関連ドキュメントの更新

## 6. テンプレート

1. 機能追加用テンプレート
   - `.github/ISSUE_TEMPLATE/feature.yml`を使用
   - 目的、実装方針、受け入れ基準を明確に記載
   - 影響範囲と技術的な検討事項を含める

2. バグ報告用テンプレート
   - `.github/ISSUE_TEMPLATE/bug.yml`を使用
   - 再現手順、期待される動作、実際の動作を記載
   - 環境情報とログを含める

3. 改善提案用テンプレート
   - `.github/ISSUE_TEMPLATE/improvement.yml`を使用
   - 現状の課題、改善案、期待される効果を記載
   - リスクと対策を含める

## 7. issue作成プロセス

1. 一時ファイルの作成
   ```bash
   # .work/issue_body.mdに内容を記載
   mkdir -p .work
   ${EDITOR} .work/issue_body.md
   ```

2. issueの作成
   ```bash
   # 一時ファイルを使用してissueを作成
   gh issue create --title "<タイトル>" --body-file .work/issue_body.md --label "<ラベル>"
   ```

3. 一時ファイルの削除
   ```bash
   # 使用済みの一時ファイルを削除
   rm .work/issue_body.md
   ```

4. 作成時の注意点
   - 一時ファイルを使用することで改行を適切に維持
   - Markdownの書式を正しく使用
   - 各セクション間に適切な空行を入れる
   - コードブロックやリストのインデントを正確に設定

## 8. 関連ルール

* [開発サイクルルール](mdc:development-cycle.mdc): 開発サイクルの全体像
* [実装プロセスルール](mdc:implementation-process.mdc): 実装の進め方
* [PR作成ルール](mdc:pr-creation.mdc): PRの作成手順
* [一時ファイル管理ルール](mdc:temporary-files.mdc): 一時ファイルの管理方法 