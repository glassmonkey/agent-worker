---
description: 一時ファイルの管理に関するルールを定義します
globs: [".work/*", ".gitignore"]
---

# 一時ファイル管理ルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. 一時ファイルの管理
   - 作業用ファイルの整理
   - 不要なファイルのバージョン管理除外
   - クリーンアップの自動化

2. 作業環境の標準化
   - 一時ファイルの配置場所の統一
   - 命名規則の統一
   - クリーンアップ手順の標準化

## 一時ファイルの管理

### 配置場所

1. 全ての一時ファイルは`.work`ディレクトリ以下に配置すること
   - PR関連: `.work/pr_description.md`, `.work/pr-draft.md`
   - その他の作業用ファイル: `.work/<作業内容を表す名前>`

2. ディレクトリ構造
   ```
   .work/
   ├── pr_description.md  # PR説明文の一時ファイル
   ├── pr-draft.md       # PR下書きファイル
   └── <その他の作業用ファイル>
   ```

### 命名規則

1. ファイル名は英数字とハイフン（-）、アンダースコア（_）のみを使用
2. 作業内容が分かる名前を付ける
3. 一時的な性質が分かるような接尾辞を付ける（例：`-draft`, `-temp`）

### Gitでの管理

1. `.work`ディレクトリ全体を`.gitignore`に記載
2. IDE固有の一時ファイルも`.gitignore`に記載
   - `.vscode/`
   - `.idea/`
   - `*.swp`
   - `*.swo`

## クリーンアップ

### クリーンアップのタイミング

1. 作業開始時
   - `make start-work`実行時に`make pr-clean`を実行

2. PR作成完了時
   - `make pr-clean`を実行して一時ファイルを削除

3. 作業完了時
   - `make finish-work`実行時に`make pr-clean`を実行

### クリーンアップ手順

1. 全ての一時ファイルの削除
   ```bash
   make pr-clean  # 全ての一時ファイルを削除
   ```

2. 削除対象
   - PR関連ファイル（`pr_description.md`, `pr-draft.md`）
   - その他の作業用一時ファイル
   - `.work`ディレクトリ内の全てのファイル 