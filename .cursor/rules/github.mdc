---
description: GitHubの操作に関するルールを定義します
globs: ["**/*"]
---

# GitHub操作ルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. タスク管理の効率化
   - 作業内容の明確化
   - 進捗状況の可視化
   - 優先順位の管理

2. コミュニケーションの円滑化
   - 問題点の共有
   - 解決策の議論
   - フィードバックの収集

3. 品質管理の強化
   - レビュープロセスの標準化
   - 変更履歴の追跡
   - ドキュメントの整備

## Issue管理

### Issue作成の基準

以下の場合に限りIssueを作成すること：

1. 指示があった場合
   - 明示的にIssue作成の指示があった場合
   - 指示内容に従ってIssueを作成

2. PR中に指示があった場合
   - PRの趣旨と大きく異なる修正が必要な場合
   - 現在のPRとは別に対応すべき問題が見つかった場合
   - レビュー時に発見された関連する改善点

※ 上記以外の場合は、原則としてIssueを作成せず、現在の作業の中で対応するか、
  PRのdescriptionに記載すること。

### Issueの優先順位

1. 指示によるIssue
   - 指示内容に従って優先順位を設定
   - 指示がない場合は確認を取る

2. PR中の派生Issue
   - 現在のPRへの影響度に応じて優先順位を設定
   - ブロッカーとなる場合は優先度を「high」に設定
   - それ以外は「medium」または「low」に設定

### Issueの作成手順

1. Issue作成前の確認
   - 類似のIssueが存在しないか確認
   - 関連するPRやコミットを確認
   - 影響範囲を評価

2. Issue本文の作成
   ```markdown
   ## 概要
   
   問題や提案の概要を簡潔に記載
   
   ## 詳細
   
   1. 具体的な問題点や改善点
      - 原因や背景
      - 影響範囲
      - 再現手順（バグの場合）
   
   2. 対応案
      - 具体的な解決方法
      - 代替案がある場合はそれも記載
      - 予想される副作用
   
   ## その他
   - 関連するIssueやPR
   - 参考情報
   - 注意事項
   ```

3. ラベルとマイルストーンの設定
   - 適切なラベルを付与（bug, enhancement, documentation等）
   - 優先度を設定（high, medium, low）
   - 必要に応じてマイルストーンを設定

### Issue管理プロセス

1. 作業開始時
   - Issueに対応するブランチを作成
   - ブランチ名は`<type>/<issue-number>-<description>`の形式
   - Issueにブランチ名をコメント

2. 作業中
   - 進捗状況を定期的にコメント
   - ブロッカーがある場合は早期に報告
   - 関連する新しい問題を発見した場合は別Issueとして切り出す

3. 作業完了時
   - PRの作成
   - PRでIssueを参照（`Closes #<issue-number>`）
   - Issueのステータスを更新

### Issue更新のタイミング

以下のタイミングで必ずIssueを更新すること：

1. 新しい情報や知見が得られた時
   - 原因の特定
   - 解決方法の発見
   - 影響範囲の変更

2. 状況の変化があった時
   - 優先度の変更
   - ブロッカーの発生
   - 依存関係の変更

3. マイルストーンの変更時
   - スケジュールの変更
   - スコープの変更
   - 担当者の変更 