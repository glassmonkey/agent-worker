---
description: テストコードの管理に関するルールを定義します
glob: "**/*.{test,spec}.{js,jsx,ts,tsx}"
---

# テストコード管理ルール

## TDDサイクル

開発はTDD（テスト駆動開発）のサイクルに従って進めること：

1. Red: 失敗するテストを書く
   * 新機能の仕様を反映したテストを作成
   * この時点でテストは失敗する状態であることを確認
2. Green: テストが通るように最小限の実装を行う
   * テストをパスさせるための必要最小限のコードを実装
   * この段階では実装の美しさは二の次
3. Refactor: リファクタリングを行う
   * テストが通る状態を保ちながらコードを改善
   * 可読性、保守性、パフォーマンスを考慮

## テストコードの基準

* 機能の仕様を正確に反映したテストケースを作成
* 正常系と異常系の両方のケースを考慮
* エッジケースを適切にカバー
* テストコードの可読性と保守性を確保
* テストの意図が明確になるよう、テスト名と構造を工夫する

## テストファイルの配置

テストの種類に応じて適切な配置場所を選択すること：

* ユニットテスト: 対象ファイルと同じディレクトリに `*.test.*` または `*_test.*` として配置
* 統合テスト: `tests/integration/` または適切なディレクトリに配置
* E2Eテスト: `tests/e2e/` または適切なディレクトリに配置

## バージョン管理

* テストコードの変更も通常のコード変更と同様にバージョン管理すること
* 各コミットの時点でテストが全て通過していることを確認すること 