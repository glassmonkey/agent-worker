---
description: プルリクエスト作成時の手順を定義します
globs: ["**/*"]
---

# プルリクエスト作成ルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. コードレビューの効率化
   - レビュー範囲の明確化
   - レビュー基準の統一
   - フィードバックの質の向上

2. 品質管理の強化
   - 変更内容の妥当性確認
   - テストの網羅性確認
   - ドキュメントの整備

3. 開発プロセスの標準化
   - 作業完了の定義の明確化
   - マージ基準の統一
   - 変更履歴の追跡性確保

## PRの作成基準

### 作成タイミング

1. 機能追加・修正の完了時
   - 実装が完了し、動作確認済みの場合
   - テストが追加・更新済みの場合
   - ドキュメントが更新済みの場合

2. レビュー依頼時
   - コードの品質が確認済みの場合
   - 変更内容が明確に説明されている場合

### 事前確認事項

1. ブランチの状態確認
   - mainブランチの最新変更を取り込み済み
   - コンフリクトが解消済み
   - 不要なファイルが含まれていないか確認

2. 品質確認
   - 全てのテストが通過
   - リンター警告の解消
   - 動作確認の完了

## PR作成手順

### 1. PR本文の作成

```markdown
# 概要

変更内容を簡潔に説明

## 変更理由

なぜこの変更が必要なのかを説明

## 変更内容

- [ ] 具体的な変更点A
- [ ] 具体的な変更点B
- [ ] 具体的な変更点C

## 確認したこと

- [ ] テストの追加・更新
- [ ] ドキュメントの更新
- [ ] 動作確認
- [ ] mainブランチの変更の取り込み
- [ ] コンフリクトの解消
- [ ] リンター警告の解消

## その他

- 関連する課題: #issue_number
- 参考情報
- 注意事項
```

### 2. レビュー依頼

1. レビュアーの選定
   - コードオーナーを含める
   - 関連する機能の担当者を含める
   - 必要に応じて複数のレビュアーを設定

2. レビュー範囲の明確化
   - 重点的にレビューして欲しい箇所の明示
   - 変更による影響範囲の説明
   - テスト項目の説明

## レビュー対応

### 1. レビューコメントへの対応

- 各コメントに対する対応方針を明確に説明
- 修正が完了したらResolveする
- 議論が必要な場合は関係者をメンションする

### 2. 修正の反映

- レビュー指摘に基づく修正は同一ブランチで実施
- 修正後は再度テストを実行
- 修正内容を分かりやすくコミットメッセージに記載

### 3. 再レビュー依頼

- 修正内容の説明をPRコメントに追記
- レビュアーに再レビューを依頼
- 必要に応じて修正箇所の説明を追加

## マージ条件

### 必須条件

1. レビュー承認
   - 必要数のレビュー承認を得ている
   - 全ての指摘事項が解決済み

2. CI/テスト
   - 全てのテストが通過
   - リンター警告が解消済み

3. ブランチの状態
   - mainブランチと同期済み
   - コンフリクトが解消済み

### 追加確認事項

1. ドキュメント
   - 必要なドキュメントが更新済み
   - APIドキュメントが更新済み（必要な場合）

2. 変更履歴
   - コミット履歴が整理済み
   - コミットメッセージが適切

3. デプロイ
   - デプロイ手順が明確
   - 必要な環境変数が設定済み 