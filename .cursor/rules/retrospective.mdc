---
description: 振り返りと改善に関するルールを定義します
globs: ["docs/retrospectives/*.md"]
---

# 振り返りと改善ルール

## 1. 振り返りの実施タイミング

### 1.1 必須の振り返り
* 作業完了時
  - 作業内容のプッシュ後
  - PR作成前
  - 振り返り自体は現在の作業ブランチで実施

### 1.2 状況に応じた振り返り
* 大きな機能追加や変更の完了時
* 問題発生時
* 定期的な振り返り（週次/月次）

### 1.3 作業完了時チェックリスト
```
□ 変更内容のプッシュ完了
□ 振り返りの実施
  - 作業概要の記録
  - プロセス評価の実施
  - 問題点の特定と対策の検討
  - 良かった点の確認
  - 改善点の洗い出し
  - 次回への反映事項の整理
  - ルール変更の必要性の確認
□ 振り返りに基づく改善提案の作成
□ PR作成
```

## 2. 振り返りの実践

### 2.1 記録
* 保存場所と形式
  - `docs/retrospectives/`ディレクトリに保存
  - ファイル名: `YYYYMMDD_作業内容.md`
  - [振り返りテンプレート](mdc:#4-振り返りテンプレート)に従って記録

* 記録の原則
  - 具体的な事実に基づく記録
  - 良い点と改善点のバランス
  - 振り返りファイルもPRに含めてコミット
  - 振り返りで得られた改善点は必ずルールに反映する

### 2.2 改善活動
* 改善点の整理
  - 問題点の分類
  - 優先順位の設定
  - 対応方針の決定

* ルール変更の手順
  1. 新しいブランチを作成（`docs/improve-作業内容`）
  2. 該当するルールファイルを更新
  3. 変更内容を説明するPRを作成

* チーム全体での改善
  - 振り返りの内容を共有
  - 改善提案の議論
  - 合意された改善案の実施

### 2.3 フォローアップ
* 改善の確認
  - 改善提案のPRがマージされたことを確認
  - 次回の作業で改善が反映されているか確認
  - 必要に応じて追加の改善を提案

* 効果の測定
  - 改善による変化の観察
  - 新たな課題の発見
  - さらなる改善の検討

## 3. 振り返りの観点

### 3.1 プロセス評価
* 開発プロセスの遵守
  - TDDサイクルの適用状況
  - 品質確認の実施状況
  - ルールの遵守状況

* 作業の効率性
  - 作業順序の適切さ
  - 時間管理の適切さ
  - リソースの有効活用

### 3.2 成果物評価
* コードの品質
  - 可読性
  - 保守性
  - パフォーマンス

* ドキュメントの品質
  - 正確性
  - 分かりやすさ
  - 網羅性

### 3.3 チーム協働
* コミュニケーション
  - 情報共有の適切さ
  - 相談・報告のタイミング
  - フィードバックの活用

* 知識共有
  - 学んだことの共有
  - ベストプラクティスの共有
  - 問題解決方法の共有

## 4. 振り返りテンプレート

```markdown
# 振り返り: [機能名/変更内容]

## 作業概要
- 目的:
- 変更範囲:
- 作業期間:

## プロセス評価
- TDDサイクルの遵守状況:
- 作業順序の適切さ:
- 効率性:

## 発生した問題
- 問題1:
  - 原因:
  - 対応:
  - 今後の防止策:

## 良かった点
- 

## 改善点
- 

## 次回への反映事項
- 

## ルール変更の提案
- 
``` 