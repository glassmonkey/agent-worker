---
description: 振り返りと改善活動の進め方を定義します
globs: ["docs/retrospectives/*.md"]
---

# 振り返りと改善ルール

## 1. 振り返りの目的

振り返りは単なる形式的なステップではなく、以下の重要な目的を持つ作業です：

1. 品質保証
   - 変更内容の妥当性を最終確認する機会
   - 潜在的な問題点の早期発見
   - 改善の必要な箇所の特定

2. プロセス改善
   - 作業手順の効率性評価
   - ボトルネックの特定
   - 次回作業への改善点の反映

3. 知見の蓄積
   - 成功事例の記録
   - 問題解決方法の共有
   - チーム全体での学習機会の創出

## 2. 振り返りの実施タイミング

### 2.1 必須の振り返り

* 作業完了時（指示待ち禁止）
  - 変更内容を確定する前に必ず実施
  - 振り返りで発見した問題は、プッシュ前に修正
  - 振り返り自体は現在の作業ブランチで実施
  - ルール変更の提案がある場合は、現在の作業ブランチ上で対応する

### 2.2 状況に応じた振り返り（指示待ち禁止）

* 問題発生時
  - 重大なバグの発生時
  - パフォーマンス問題の発生時
  - セキュリティインシデント発生時

* 機能リリース時
  - 大規模な機能追加後
  - システム改修後
  - 新規プロジェクト完了時

## 3. 振り返りの実践方法

### 3.1 作業完了時チェックリスト

```markdown
□ 変更内容の確定（この時点でまだプッシュしない）
□ 振り返りの実施（指示待ち禁止）
  - 作業概要の記録
  - プロセス評価の実施
  - 問題点の特定と対策の検討
  - 良かった点の確認
  - 改善点の洗い出し
  - 次回への反映事項の整理
  - ルール変更の必要性の確認
□ 振り返りで発見した問題の修正（必要な場合）
□ 振り返りに基づく改善提案の作成（指示待ち禁止）
□ ルール変更提案がある場合は現在の作業ブランチで対応（指示待ち禁止）
□ 全ての修正と振り返りが完了後、変更をプッシュ
□ PR作成
```

### 3.2 振り返りの記録

* 記録方法
  - `docs/retrospectives/`ディレクトリに保存
  - ファイル名: `YYYYMMDD_作業内容.md`
  - [振り返りテンプレート](#3-振り返りテンプレート)を使用
  - 具体的な事実に基づく記録
  - 良い点と改善点のバランスを考慮

* 記録の確認
  - 記録内容の正確性
  - 必要な情報の網羅性
  - 改善提案の具体性
  - アクションアイテムの明確さ

### 3.3 改善活動の進め方

1. 改善点の整理
   * 優先順位付け
   * 実現可能性の評価
   * リソースの見積もり
   * タイムラインの設定

2. ルール変更の実施
   * 現在の作業ブランチ上でルールファイルを更新
   * 変更内容を説明するコミットメッセージの作成
   * 変更をPRに含める
   * レビューと承認の取得

3. チーム全体での改善
   * 振り返り内容の共有
   * 改善提案の議論
   * 合意された改善案の実施
   * 進捗の定期的な確認

### 3.4 フォローアップ

* 改善の確認
  - 改善提案のPRがマージされたか
  - 次回の作業で改善が反映されているか
  - 追加の改善が必要か

* 効果の測定
  - 改善による効果の確認
  - 新たな問題の有無
  - さらなる改善の必要性

## 4. 振り返りテンプレート

```markdown
# 振り返り: [機能名/変更内容]

## 関連する指示内容
- チケット番号:
- 指示内容:
  - 
- 制約条件:
  - 

## 作業概要
- 目的:
- 変更範囲:
- 作業期間:

## プロセス評価
- 作業順序の適切さ:
- 効率性:
- 主体性の評価:
  - 指示待ちの有無
  - プロセス遵守の状況
  - 改善提案の積極性

## 発生した問題
- 問題1:
  - 原因:
  - 対応:
  - 今後の防止策:

## 良かった点
- 

## 改善点
- 

## 次回への反映事項
- 

## ルール変更の提案
- 提案1:
  - 対象ルール:
  - 変更内容:
  - 期待される効果:
  - 対応状況:
    - [ ] 現在の作業ブランチで対応済み
    - [ ] 対応待ち

## ルール反映の確認
- 提案したルール変更の反映状況:
  - [ ] 反映済み
  - [ ] 反映待ち
  - [ ] 反映不要
- 反映したルールファイル:
  - 
- 未反映の項目と理由:
  - 
```

## 5. 振り返りの観点

### 5.1 プロセス面

* 開発プロセス
  - 作業手順の適切性
  - 時間配分の妥当性
  - ルール遵守の状況
  - 主体的な行動の実践状況

* 作業効率
  - タスク分割の適切さ
  - 時間管理の効率性
  - リソース活用の最適性

### 5.2 技術面

* コード品質
  - 可読性の向上
  - 保守性の改善
  - パフォーマンスの最適化

* アーキテクチャ
  - 設計の一貫性
  - スケーラビリティ
  - 技術的負債の管理

### 5.3 チーム面

* コミュニケーション
  - 情報共有の効率性
  - ドキュメントの有効性
  - チーム間の連携

* スキル向上
  - 技術的な学び
  - ベストプラクティスの共有
  - 知識の移転

## 6. 改善活動の進め方

### 6.1 改善提案の作成

* 提案内容
  - 具体的な改善内容
  - 期待される効果
  - 必要なリソース
  - 実施タイムライン

* 優先順位付け
  - 影響度の評価
  - 実現可能性の検討
  - コストベネフィット分析

### 6.2 改善の実施

* 実施計画
  - 具体的なアクション
  - 担当者の割り当て
  - マイルストーンの設定
  - 進捗管理方法

* モニタリング
  - 効果の測定方法
  - フィードバックの収集
  - 調整の必要性確認

### 6.3 評価と調整

* 効果測定
  - 定量的な評価
  - 定性的な評価
  - 目標達成度の確認

* 継続的改善
  - 改善サイクルの継続
  - 新たな課題の特定
  - 長期的な改善計画の更新