---
description: 開発サイクルに関するルールを定義します
globs: ["**/*"]
---

# 開発サイクルルール

## 1. 目的

本ルールは以下の目的のために定義されています：

1. 開発プロセスの標準化
   - 作業手順の明確化
   - 品質基準の統一
   - 効率的な開発の実現

2. 品質管理の強化
   - 早期の問題発見
   - テスト駆動開発の促進
   - コードレビューの充実

3. チーム協働の促進
   - 情報共有の円滑化
   - 進捗管理の効率化
   - フィードバックの活性化

## 2. 開発サイクルの全体像

1. 課題の起票
   - 課題管理の詳細は[課題管理ルール](mdc:issue-management.mdc)を参照
   - 新機能開発、バグ修正、改善提案の起点
   - 作業範囲と目標の明確化

2. 開発準備と実装
   - 実装プロセスの詳細は[実装プロセスルール](mdc:implementation-process.mdc)を参照
   - ブランチ作成と環境準備
   - テスト駆動開発の実践
   - 品質管理の実施

3. 振り返りと品質確認
   - 振り返りの詳細は[振り返りルール](mdc:retrospective.mdc)を参照
   - 品質確認の詳細は[品質確認ルール](mdc:quality-check.mdc)を参照
   - 実装完了時の振り返り
   - コードの品質確認

4. 作業完了
   - 作業完了の詳細は[作業完了ルール](mdc:work-completion.mdc)を参照
   - レビュー準備とPR作成
   - マージと後処理
   - 完了確認と知見の共有

## 3. 開発サイクルの進め方

### 1. 作業の開始
```bash
# 作業用ブランチの作成と環境準備
make start-work branch=<branch-name>
```

### 2. 品質の確認
```bash
# テストの実行
make test

# リンターの実行
make lint

# 型チェックの実行
make type-check
```

### 3. 振り返りの実施
```bash
# 振り返りの準備
make prepare-retrospective

# 振り返りの確認
make check-retrospective
```

### 4. 作業の完了
```bash
# PRの作成
make submit-work title="<PRタイトル>"

# 作業完了の実行
make finish-work PR="<PRタイトル>"
```

## 4. 関連ルール

* [課題管理ルール](mdc:issue-management.mdc): 課題の管理方法
  - 課題の起票
  - 課題の記載内容
  - ラベル管理

* [実装プロセスルール](mdc:implementation-process.mdc): 実装の進め方
  - 開発準備
  - テスト駆動開発
  - コミット管理
  - 進捗報告

* [振り返りルール](mdc:retrospective.mdc): 振り返りと改善活動の進め方
  - 振り返りの実施タイミング
  - 振り返りの実践方法
  - 振り返りの観点
  - 改善活動の進め方

* [品質確認ルール](mdc:quality-check.mdc): 品質確認の基準と手順
  - 開発中の確認事項
  - 作業完了前の確認事項
  - プッシュ後の確認事項
  - コードレビューの基準

* [作業完了ルール](mdc:work-completion.mdc): 作業完了の手順
  - レビュー準備完了の定義
  - マージ承認の条件
  - 作業完了プロセス
  - 完了後の確認

* [Git操作ルール](mdc:git.mdc): Git操作の手順
  - ブランチ管理の方法
  - コミット管理の方法
  - PR作成前の手順
  - 作業完了時の手順

* [PR作成ルール](mdc:pr-creation.mdc): PRの作成手順
  - 作業完了前の確認事項
  - PR作成の手順
  - PR本文の作成方法
  - 作業完了時の手順

* [テストコード管理ルール](mdc:test.mdc): テストコードの管理方法
  - テストコードの基準
  - テストの構造化
  - テストファイルの配置
  - バージョン管理の方法